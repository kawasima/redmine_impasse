<style>
ul, li {
  margin:  0;
  padding: 0;
}

ul.row {
  font-size: 0px;
  width: 800px;
}

ul.row li {
  font-size: 10px;
  list-style: none;
  display: inline-block;
}
ul.row li.suite-count {
  width: 13%;
  text-align: right;
}
ul.row li.suite-name {
  cursor:pointer;
  width: 22%;
}
ul.container li {
  list-style: none;
}
.bg-level1 { background-color: #ededed; }
.bg-level2 { background-color: #dfdbd2; }
.bg-level3 { background-color: #ccccc9; }
.bg-level4 { background-color: #bdbaa6; }
.bg-level5 { background-color: #a19d94; }
</style>
<div class="tab-content">
  <ul class="row" style="background-color: #EEE; font-weight: bold;">
    <li class="suite-name" ><%=l(:label_test_suite_name)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_total_cases)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_total_executions)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_total_bugs)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_open_bugs)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_executions_rate)%></li>
    <li class="suite-count"><%=l(:label_impasse_stat_bugs_rate)%></li>
  </ul>
  <%
    root_node = Impasse::Node.find_by(:name => @test_plan.version.project.identifier, :node_type_id => 1)
  %>
  <ul class="container">
  <% @statistics.each do |st| %>
    <% executed = st.ok.to_i + st.ng.to_i + st.block.to_i %>
    <li>
      <ul class="row">
        <li class="suite-name" data-suite-id="<%=h root_node.id %>"><%=h st.name %></li>
        <li class="suite-count"><%=h st.total_cases %></li>
        <li class="suite-count"><%=h executed %></li>
        <li class="suite-count"><%=h st.bugs %></li>
        <li class="suite-count"><%=h st.bugs.to_i - st.closed_bugs.to_i %></li>
        <li class="suite-count"><%=number_to_percentage (st.total_cases == 0) ? 0 : (executed.to_f / st.total_cases.to_f) * 100, :precision => 2 %></li>
        <li class="suite-count"><%=number_to_percentage (st.total_cases == 0) ? 0 : (st.bugs.to_f / st.total_cases.to_f) * 100, :precision => 2%></li>
      </ul>
    </li>
  <% end %>
  </ul>
</div>
<script>
(function($) {
  function findChildren(self) {
    var container = $("<ul/>").addClass("container");
    self.parents("li:first").append(container);
    $.ajax({
      url: '',
      data: {
        format: 'json_impasse',
        test_suite_id: self.attr("data-suite-id")
      },
      success: function(results) {
        container.empty();
        var level = self.parents("ul.container").size();
        $.each(results, function(i, st) {
          var row = $("<ul/>").addClass("row").addClass("bg-level" + (level % 5));
          var caret = $("<span/>").css({display:"inline-block"}).width(12 * level);
          var executed = Number(st.ok) + Number(st.ng) + Number(st.block);
          row.append($("<li/>").addClass("suite-name")
             .attr("data-suite-id", st.id).attr("data-node-type-id", st.node_type_id)
             .append(caret).append(st.name))
             .append($("<li/>").addClass("suite-count").text(st.total_cases))
             .append($("<li/>").addClass("suite-count").text(executed))
             .append($("<li/>").addClass("suite-count").text(st.bugs))
             .append($("<li/>").addClass("suite-count").text(Number(st.bugs)-Number(st.closed_bugs)))
             .append($("<li/>").addClass("suite-count").text((executed*100/st.total_cases).toFixed(2) + "%"))
             .append($("<li/>").addClass("suite-count").text((st.bugs*100/st.total_cases).toFixed(2) + "%"));
          container.append($("<li/>").append(row));
        });
      }, error: function() { container.empty(); }
    });
    container.html($('<li><img src="<%=Redmine::Utils::relative_url_root%>/plugin_assets/redmine_impasse/stylesheets/themes/default/throbber.gif"></li>'));
  }

  $(".suite-name").die("click").live("click", function() {
    var self = $(this);
    if (self.attr("data-node-type-id") == 3)
      return;
    if (self.hasClass("collapsed")) {
      self.removeClass("collapsed");
      self.parents("ul.row:first").siblings("ul.container").hide();
    } else {
      var container = self.parents("ul.row:first").siblings("ul.container");
      if (container.size() == 0) {
        findChildren(self);
      } else {
        container.show();
      }
      self.addClass("collapsed");
    }

  });
})(jQuery)
</script>

